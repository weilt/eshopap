server.port=8764
############################################################################
spring.application.name=eshop-productservice
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
######################MYSQL  durid数据连接池#################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/eshop?useSSL=false
spring.datasource.username=root
spring.datasource.password=Weilt_1234

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=1
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#######################MYBATIS###############################################
mybatis.type-aliases-package=com.weilt.common.entity
mybatis.configuration.use-column-label=true
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:mapper/*.xml
#######################Redis##################################################
#spring.redis.jedis.pool.max-idle=8
#spring.redis.jedis.pool.min-idle=0
#spring.redis.jedis.pool.max-active=8
#spring.redis.jedis.pool.max-wait=0ms
#spring.redis.jedis.timeout=5000
#######################kafka###################################################
#spring.kafka.bootstrap-servers=192.168.201.120:9092,192.168.201.121:9092,192.168.201.122:9092
#spring.kafka.consumer.group-id=mygroup
#spring.kafka.template.default-topic=my-replicated-topic
#spring.kafka.listener.concurrency=3
#spring.kafka.producer.batch-size=65536
#spring.kafka.producer.buffer-memory=524288
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer